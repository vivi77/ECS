include(GenerateExportHeader)

set(IDLIB_NAME "SIDGen")
set(SRCS "SIDGenerator.cpp")
set(HDRS "SIDGenerator.hh")
add_library(${IDLIB_NAME} SHARED ${SRCS} ${HDRS})
target_include_directories(${IDLIB_NAME} PUBLIC ${CMAKE_BINARY_DIR}/S)
set_target_properties(${IDLIB_NAME} PROPERTIES IMPORTED_LOCATION ${OUTPUT_LOCATION})

generate_export_header(${IDLIB_NAME})

string(TOLOWER ${IDLIB_NAME} IDLIB_NAME_LOW)
install(TARGETS ${IDLIB_NAME} DESTINATION ${LIBRARY_INSTALL_DIR}/S)
install(FILES
  ${HDRS}
  ${CMAKE_BINARY_DIR}/S/${IDLIB_NAME_LOW}_export.h
  DESTINATION ${INCLUDE_INSTALL_DIR})


if(UNIX)
  set(SYS_OUTPUT_LOCATION ${OUTPUT_LOCATION}/lib/S)
elseif(WIN32)
  set(SYS_OUTPUT_LOCATION ${OUTPUT_LOCATION})
endif(UNIX)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${SYS_OUTPUT_LOCATION})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${SYS_OUTPUT_LOCATION})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${SYS_OUTPUT_LOCATION})
foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
  string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
endforeach(OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES)

subdirlist(SYS_LIST ${CMAKE_CURRENT_SOURCE_DIR})
foreach(S ${SYS_LIST})
  add_subdirectory(${S})
endforeach()
